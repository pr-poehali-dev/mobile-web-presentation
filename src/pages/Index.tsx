import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const slides = [
    {
      id: 1,
      title: "–í–∞–π–±–∫–æ–¥–∏–Ω–≥",
      subtitle: "–ù–æ–≤–∞—è —ç—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
      content: "–°–æ–∑–¥–∞–≤–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ —á—É–≤—Å—Ç–≤–∞ –∏ –∏–Ω—Ç—É–∏—Ü–∏—é. –ö–æ–≥–¥–∞ –∫–æ–¥ –∂–∏–≤—ë—Ç –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å —Ç–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏.",
      emoji: "‚ú®",
      bgGradient: "from-orange-400 via-red-500 to-pink-500"
    },
    {
      id: 2,
      title: "–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–∞–π–±–∫–æ–¥–∏–Ω–≥?",
      subtitle: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ",
      content: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —ç–º–æ—Ü–∏–∏ –∏ —ç—Å—Ç–µ—Ç–∏–∫—É. –ö–æ–≥–¥–∞ –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ç–≤–æ—ë –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω—É–∂–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.",
      emoji: "üé®",
      bgGradient: "from-blue-400 via-purple-500 to-pink-500"
    },
    {
      id: 3,
      title: "–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ #1",
      subtitle: "–ê–Ω–Ω–∞, —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏—Ü–∞",
      content: "–°–æ–∑–¥–∞–ª–∞ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ —Ç–æ–ª—å–∫–æ –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ü–≤–µ—Ç–∞. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–ª–∏ 100–ö —Ä–∞–∑ –∑–∞ –º–µ—Å—è—Ü.",
      emoji: "üßò‚Äç‚ôÄÔ∏è",
      bgGradient: "from-green-400 via-blue-500 to-purple-500"
    },
    {
      id: 4,
      title: "–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ #2",
      subtitle: "–ú–∞–∫—Å, –∏–Ω–¥–∏-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      content: "–ó–∞–ø—É—Å—Ç–∏–ª –∏–≥—Ä—É —Å –ø–∏–∫—Å–µ–ª—å-–∞—Ä—Ç–æ–º, –≤–¥–æ—Ö–Ω–æ–≤–∏–≤—à–∏—Å—å –Ω–æ—Å—Ç–∞–ª—å–≥–∏–µ–π –ø–æ 90-–º. –†–∞–±–æ—Ç–∞–ª —Ç–æ–ª—å–∫–æ –Ω–æ—á–∞–º–∏ –ø–æ–¥ –ª–æ—Ñ–∏-–º—É–∑—ã–∫—É. –ó–∞—Ä–∞–±–æ—Ç–∞–ª $50–ö –Ω–∞ Steam.",
      emoji: "üéÆ",
      bgGradient: "from-yellow-400 via-orange-500 to-red-500"
    },
    {
      id: 5,
      title: "–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ #3",
      subtitle: "–õ–∏–∑–∞, –¥–∏–∑–∞–π–Ω–µ—Ä-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç",
      content: "–°–æ–∑–¥–∞–ª–∞ AI-–ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π. –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–∞ —Å–∏–Ω–µ—Å—Ç–µ–∑–∏–µ–π. –ü–æ–ª—É—á–∏–ª–∞ $500–ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –æ—Ç Y Combinator.",
      emoji: "üöÄ",
      bgGradient: "from-purple-400 via-pink-500 to-red-500"
    },
    {
      id: 6,
      title: "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ",
      subtitle: "–¢–≤–æ—è –æ—á–µ—Ä–µ–¥—å",
      content: "–í–∞–π–±–∫–æ–¥–∏–Ω–≥ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç—Ä–µ–Ω–¥—Ç. –≠—Ç–æ —Ä–µ–≤–æ–ª—é—Ü–∏—è –≤ —Ç–æ–º, –∫–∞–∫ –º—ã —Å–æ–∑–¥–∞—ë–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ù–∞—á–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–¥—Ü–µ–º —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.",
      emoji: "üíù",
      bgGradient: "from-pink-400 via-red-500 to-yellow-500"
    }
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const goToSlide = (index: number) => {
    setCurrentSlide(index);
  };

  return (
    <div className="min-h-screen bg-black text-white overflow-hidden">
      {/* Main Slider */}
      <div className="relative h-screen">
        {slides.map((slide, index) => (
          <div
            key={slide.id}
            className={`absolute inset-0 transition-all duration-700 ease-in-out ${
              index === currentSlide 
                ? 'opacity-100 translate-x-0' 
                : index < currentSlide 
                  ? 'opacity-0 -translate-x-full' 
                  : 'opacity-0 translate-x-full'
            }`}
          >
            <div className={`h-full bg-gradient-to-br ${slide.bgGradient} flex items-center justify-center p-6`}>
              <Card className="bg-white/10 backdrop-blur-lg border-white/20 p-8 max-w-md w-full text-center animate-fade-in">
                <div className="text-6xl mb-6">{slide.emoji}</div>
                <h1 className="text-3xl font-bold mb-2 text-white">{slide.title}</h1>
                <h2 className="text-lg font-medium mb-6 text-white/80">{slide.subtitle}</h2>
                <p className="text-white/90 leading-relaxed">{slide.content}</p>
              </Card>
            </div>
          </div>
        ))}

        {/* Navigation Arrows */}
        <Button
          onClick={prevSlide}
          className="absolute left-4 top-1/2 -translate-y-1/2 bg-white/20 hover:bg-white/30 border-white/30 backdrop-blur-sm"
          size="icon"
          variant="outline"
        >
          <Icon name="ChevronLeft" size={20} />
        </Button>

        <Button
          onClick={nextSlide}
          className="absolute right-4 top-1/2 -translate-y-1/2 bg-white/20 hover:bg-white/30 border-white/30 backdrop-blur-sm"
          size="icon"
          variant="outline"
        >
          <Icon name="ChevronRight" size={20} />
        </Button>

        {/* Slide Counter */}
        <div className="absolute top-6 right-6 bg-white/20 backdrop-blur-sm rounded-full px-4 py-2 text-white font-medium">
          {currentSlide + 1} / {slides.length}
        </div>

        {/* Progress Dots */}
        <div className="absolute bottom-8 left-1/2 -translate-x-1/2 flex space-x-3">
          {slides.map((_, index) => (
            <button
              key={index}
              onClick={() => goToSlide(index)}
              className={`w-3 h-3 rounded-full transition-all duration-300 ${
                index === currentSlide 
                  ? 'bg-white scale-125' 
                  : 'bg-white/40 hover:bg-white/60'
              }`}
            />
          ))}
        </div>

        {/* Swipe Hint */}
        <div className="absolute bottom-20 left-1/2 -translate-x-1/2 flex items-center space-x-2 text-white/60 text-sm">
          <Icon name="ArrowLeft" size={16} />
          <span>–°–≤–∞–π–ø –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä–µ–ª–∫–∏</span>
          <Icon name="ArrowRight" size={16} />
        </div>
      </div>

      {/* Touch Navigation for Mobile */}
      <div 
        className="absolute inset-0 flex"
        onTouchStart={(e) => {
          const touchStartX = e.touches[0].clientX;
          const handleTouchEnd = (endEvent: TouchEvent) => {
            const touchEndX = endEvent.changedTouches[0].clientX;
            const diffX = touchStartX - touchEndX;
            
            if (Math.abs(diffX) > 50) { // Minimum swipe distance
              if (diffX > 0) {
                nextSlide();
              } else {
                prevSlide();
              }
            }
            
            document.removeEventListener('touchend', handleTouchEnd);
          };
          
          document.addEventListener('touchend', handleTouchEnd);
        }}
      >
        <div className="w-1/3 h-full" onClick={prevSlide} />
        <div className="w-1/3 h-full" />
        <div className="w-1/3 h-full" onClick={nextSlide} />
      </div>
    </div>
  );
};

export default Index;